{
  "version": 3,
  "sources": ["../../@open-wc/dedupe-mixin/src/dedupeMixin.js", "../../@open-wc/scoped-elements/src/ScopedElementsMixin.js", "../../@webwriter/lit/index.ts"],
  "sourcesContent": ["const appliedClassMixins = new WeakMap();\n\n/** Vefify if the Mixin was previously applyed\n * @private\n * @param {function} mixin      Mixin being applyed\n * @param {object} superClass   Class receiving the new mixin\n * @returns {boolean}\n */\nfunction wasMixinPreviouslyApplied(mixin, superClass) {\n  let klass = superClass;\n  while (klass) {\n    if (appliedClassMixins.get(klass) === mixin) {\n      return true;\n    }\n    klass = Object.getPrototypeOf(klass);\n  }\n  return false;\n}\n\n/** Apply each mixin in the chain to make sure they are not applied more than once to the final class.\n * @export\n * @param {function} mixin      Mixin to be applyed\n * @returns {object}            Mixed class with mixin applied\n */\nexport function dedupeMixin(mixin) {\n  return superClass => {\n    if (wasMixinPreviouslyApplied(mixin, superClass)) {\n      return superClass;\n    }\n    const mixedClass = mixin(superClass);\n    appliedClassMixins.set(mixedClass, mixin);\n    return mixedClass;\n  };\n}\n", "import { dedupeMixin } from '@open-wc/dedupe-mixin';\nimport { adoptStyles } from '@lit/reactive-element/css-tag.js';\n\n/**\n * @typedef {import('./types').RenderOptions} RenderOptions\n * @typedef {import('./types').ScopedElementsMixin} ScopedElementsMixin\n * @typedef {import('./types').ScopedElementsHost} ScopedElementsHost\n * @typedef {import('./types').ScopedElementsMap} ScopedElementsMap\n * @typedef {import('@lit/reactive-element').CSSResultOrNative} CSSResultOrNative\n */\n\n// @ts-ignore\nconst supportsScopedRegistry = !!ShadowRoot.prototype.createElement;\n\n/**\n * @template {import('./types').Constructor<HTMLElement>} T\n * @param {T} superclass\n * @return {T & import('./types').Constructor<ScopedElementsHost>}\n */\nconst ScopedElementsMixinImplementation = superclass =>\n  /** @type {ScopedElementsHost} */\n  class ScopedElementsHost extends superclass {\n    /**\n     * Obtains the scoped elements definitions map if specified.\n     *\n     * @returns {ScopedElementsMap}\n     */\n    static get scopedElements() {\n      return {};\n    }\n\n    /**\n     * Obtains the ShadowRoot options.\n     *\n     * @type {ShadowRootInit}\n     */\n    static get shadowRootOptions() {\n      return this.__shadowRootOptions;\n    }\n\n    /**\n     * Set the shadowRoot options.\n     *\n     * @param {ShadowRootInit} value\n     */\n    static set shadowRootOptions(value) {\n      this.__shadowRootOptions = value;\n    }\n\n    /**\n     * Obtains the element styles.\n     *\n     * @returns {CSSResultOrNative[]}\n     */\n    static get elementStyles() {\n      return this.__elementStyles;\n    }\n\n    static set elementStyles(styles) {\n      this.__elementStyles = styles;\n    }\n\n    // either TS or ESLint will complain here\n    // eslint-disable-next-line no-unused-vars\n    constructor(..._args) {\n      super();\n      /** @type {RenderOptions} */\n      this.renderOptions = this.renderOptions || undefined;\n    }\n\n    /**\n     * Obtains the CustomElementRegistry associated to the ShadowRoot.\n     *\n     * @returns {CustomElementRegistry}\n     */\n    get registry() {\n      // @ts-ignore\n      return this.constructor.__registry;\n    }\n\n    /**\n     * Set the CustomElementRegistry associated to the ShadowRoot\n     *\n     * @param {CustomElementRegistry} registry\n     */\n    set registry(registry) {\n      // @ts-ignore\n      this.constructor.__registry = registry;\n    }\n\n    createRenderRoot() {\n      const { scopedElements, shadowRootOptions, elementStyles } =\n        /** @type {typeof ScopedElementsHost} */ (this.constructor);\n\n      const shouldCreateRegistry =\n        !this.registry ||\n        // @ts-ignore\n        (this.registry === this.constructor.__registry &&\n          !Object.prototype.hasOwnProperty.call(this.constructor, '__registry'));\n\n      /**\n       * Create a new registry if:\n       * - the registry is not defined\n       * - this class doesn't have its own registry *AND* has no shared registry\n       */\n      if (shouldCreateRegistry) {\n        this.registry = supportsScopedRegistry ? new CustomElementRegistry() : customElements;\n        for (const [tagName, klass] of Object.entries(scopedElements)) {\n          this.defineScopedElement(tagName, klass);\n        }\n      }\n\n      /** @type {ShadowRootInit} */\n      const options = {\n        mode: 'open',\n        ...shadowRootOptions,\n        customElements: this.registry,\n      };\n\n      const createdRoot = this.attachShadow(options);\n      if (supportsScopedRegistry) {\n        this.renderOptions.creationScope = createdRoot;\n      }\n\n      if (createdRoot instanceof ShadowRoot) {\n        adoptStyles(createdRoot, elementStyles);\n        this.renderOptions.renderBefore = this.renderOptions.renderBefore || createdRoot.firstChild;\n      }\n\n      return createdRoot;\n    }\n\n    createScopedElement(tagName) {\n      const root = supportsScopedRegistry ? this.shadowRoot : document;\n      // @ts-ignore polyfill to support createElement on shadowRoot is loaded\n      return root.createElement(tagName);\n    }\n\n    /**\n     * Defines a scoped element.\n     *\n     * @param {string} tagName\n     * @param {typeof HTMLElement} klass\n     */\n    defineScopedElement(tagName, klass) {\n      const registeredClass = this.registry.get(tagName);\n      if (registeredClass && supportsScopedRegistry === false && registeredClass !== klass) {\n        // eslint-disable-next-line no-console\n        console.error(\n          [\n            `You are trying to re-register the \"${tagName}\" custom element with a different class via ScopedElementsMixin.`,\n            'This is only possible with a CustomElementRegistry.',\n            'Your browser does not support this feature so you will need to load a polyfill for it.',\n            'Load \"@webcomponents/scoped-custom-element-registry\" before you register ANY web component to the global customElements registry.',\n            'e.g. add \"<script src=\"/node_modules/@webcomponents/scoped-custom-element-registry/scoped-custom-element-registry.min.js\"></script>\" as your first script tag.',\n            'For more details you can visit https://open-wc.org/docs/development/scoped-elements/',\n          ].join('\\n'),\n        );\n      }\n      if (!registeredClass) {\n        return this.registry.define(tagName, klass);\n      }\n      return this.registry.get(tagName);\n    }\n\n    /**\n     * @deprecated use the native el.tagName instead\n     *\n     * @param {string} tagName\n     * @returns {string} the tag name\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getScopedTagName(tagName) {\n      return tagName;\n    }\n\n    /**\n     * @deprecated use the native el.tagName instead\n     *\n     * @param {string} tagName\n     * @returns {string} the tag name\n     */\n    // eslint-disable-next-line class-methods-use-this\n    static getScopedTagName(tagName) {\n      return tagName;\n    }\n  };\n\nexport const ScopedElementsMixin = dedupeMixin(ScopedElementsMixinImplementation);\n", "import {LitElement} from \"lit\"\r\nimport { property } from \"lit/decorators.js\"\r\nimport {ScopedElementsMixin} from \"@open-wc/scoped-elements\"\r\n\r\nimport {Widget} from \"@webwriter/model\"\r\n\r\n/**WebWriter API: Minimal base class for a widget implemented in Lit. Implements the core properties required by WebWriter, initializes the component when loaded and provides a Scoped Custom Element Registry (@open-wc/scoped-elements) to help with namespace conflicts when using other components in this widget. */\r\nexport class LitElementWw extends ScopedElementsMixin(LitElement) implements Widget {\r\n\r\n  static shadowRootOptions = {...ScopedElementsMixin(LitElement).shadowRootOptions, delegatesFocus: true}\r\n  \r\n  /**WebWriter API: If true, render the component such that easy printing is possible. */\r\n  @property({type: Boolean, attribute: true, reflect: true})\r\n  printable: boolean\r\n\r\n  /**WebWriter API: If true, allow user interaction to change the component. */\r\n  @property({type: Boolean, attribute: true, reflect: true})\r\n  editable: boolean\r\n\r\n  /**WebWriter API: If true, emit DOM events enriched with xAPI statements. */\r\n  @property({type: Boolean, attribute: true, reflect: true})\r\n  analyzable: boolean\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback()\r\n    this.getAttributeNames().forEach(n => this.setAttribute(n, this.getAttribute(n)))\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
